{"version":3,"sources":["components/PostDetails.js","components/PostList.js","App.js","index.js"],"names":["getPostQuery","gql","PostDetails","post","this","props","data","title","body","user","name","username","id","displayPostDetails","Component","graphql","options","variables","postId","getPostsQuery","PostList","state","selected","loading","posts","map","key","onClick","e","setState","displayPosts","client","ApolloClient","uri","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+jBAKA,IAAMA,EAAeC,YAAH,KAgBZC,E,mLACmB,IACVC,EAAQC,KAAKC,MAAMC,KAAnBH,KAEP,OAAGA,EAEK,6BACI,2CAAiBA,EAAKI,OACtB,2BAAG,yCAAH,IAAsBJ,EAAKK,MAC3B,2BAAG,2CAAH,IAAwBL,EAAKM,KAAKC,MAClC,2BAAG,gDAAyBP,EAAKM,KAAKE,WAK1C,+D,+BAKR,OACI,yBAAKC,GAAG,gBACHR,KAAKS,0B,GAtBIC,aA4BXC,cAAQf,EAAc,CAACgB,QAAS,SAACX,GAC5C,MAAO,CACHY,UAAW,CACPL,GAAIP,EAAMa,WAHPH,CAMXb,G,yMCjDJ,IAAMiB,EAAgBlB,YAAH,KAcbmB,E,kDAEF,WAAYf,GAAO,IAAD,8BACd,cAAMA,IACDgB,MAAQ,CACTC,SAAU,MAHA,E,2DAOH,IAAD,OACNhB,EAAOF,KAAKC,MAAMC,KACtB,OAAGA,EAAKiB,QACG,iDAEAjB,EAAKkB,MAAMC,KAAI,SAAAtB,GAClB,OACI,wBAAIuB,IAAKvB,EAAKS,GAAIe,QAAS,SAACC,GACxB,EAAKC,SAAS,CAACP,SAAUnB,EAAKS,OAC9BT,EAAKI,Y,+BAOrB,OACI,6BACI,wBAAIK,GAAG,aACDR,KAAK0B,gBAEX,kBAAC,EAAD,CAAaZ,OAAQd,KAAKiB,MAAMC,gB,GA9BzBR,aAoCRC,cAAQI,EAARJ,CAAuBK,GC/ChCW,EAAS,IAAIC,IAAa,CAC9BC,IAAK,kCAgBQC,MAXf,WACE,OACE,kBAAC,IAAD,CAAgBH,OAAQA,GACtB,yBAAKnB,GAAG,QACN,6CACA,kBAAC,EAAD,SCfRuB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.cccd363b.chunk.js","sourcesContent":["import React ,{Component} from 'react';\r\nimport {gql} from 'apollo-boost'; \r\n//binds graphql a react \r\nimport { graphql } from 'react-apollo';\r\n\r\nconst getPostQuery = gql`\r\n    query($id:ObjectId){\r\n        post(id: $id){\r\n            id\r\n            userId\r\n            title\r\n            body\r\n            user{\r\n                name\r\n                username\r\n            }\r\n        }\r\n    }\r\n\r\n`\r\n\r\nclass PostDetails extends Component {\r\n    displayPostDetails(){\r\n        const {post} = this.props.data;\r\n        //if true\r\n        if(post){\r\n            return(\r\n                <div>\r\n                    <h2>Post Title: {post.title}</h2>\r\n                    <p><b>Post body:</b> {post.body}</p>\r\n                    <p><b>User's name:</b> {post.user.name}</p>\r\n                    <p><b>User's username: </b>{post.user.username}</p>\r\n                </div>\r\n            )\r\n        }else{\r\n            return(\r\n                <div>No post has been selected...</div>\r\n            )\r\n        }\r\n    }\r\n    render(){\r\n        return(\r\n            <div id=\"post-details\">\r\n                {this.displayPostDetails()}\r\n            </div>         \r\n        );\r\n    }\r\n}\r\n\r\nexport default graphql(getPostQuery, {options: (props) =>{\r\n    return {\r\n        variables: {\r\n            id: props.postId\r\n        }\r\n    }\r\n}})(PostDetails); ","import React ,{Component} from 'react';\r\nimport {gql} from 'apollo-boost'; \r\n//binds graphql a react \r\nimport { graphql } from 'react-apollo';\r\nimport PostDetails from './PostDetails';\r\n\r\nconst getPostsQuery = gql`\r\n{\r\n    posts{\r\n      id\r\n      title\r\n      body\r\n      userId\r\n      user{\r\n        name\r\n        username\r\n      }\r\n    }\r\n  }\r\n`\r\nclass PostList extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            selected: null\r\n        }\r\n    }\r\n\r\n    displayPosts(){\r\n        var data = this.props.data; \r\n        if(data.loading){\r\n            return <div>Loading Posts...</div>\r\n        }else{\r\n            return data.posts.map(post => {\r\n                return(\r\n                    <li key={post.id} onClick={(e) => {\r\n                        this.setState({selected: post.id})\r\n                    }}>{post.title}\r\n                    </li>\r\n                );\r\n            })\r\n        }\r\n    }\r\n    render(){\r\n        return(\r\n            <div>\r\n                <ul id=\"post-list\">\r\n                    { this.displayPosts() }\r\n                </ul>\r\n                <PostDetails postId={this.state.selected}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default graphql(getPostsQuery)(PostList); ","import React from 'react';\nimport ApolloClient from 'apollo-boost'; \nimport {ApolloProvider} from 'react-apollo'; \n\n//components imported and nested\nimport PostList from './components/PostList'; \n\n//apollo client setup \n//uri es el endpoint al cual se le estan haciendo requests/queries\nconst client = new ApolloClient({\n  uri: 'http://localhost:4000/graphql'\n});\n\n//los tags de apolloclient permite que se consiga la data del endpoint del client\n//y que lo pueda inyectar en el componente cuando se hagan queries \nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <div id=\"main\">\n        <h1>List of posts</h1>\n        <PostList/>\n      </div>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}